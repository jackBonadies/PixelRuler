<Window
    x:Class="PixelRuler.WindowSelectionWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:PixelRuler"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewmodels="clr-namespace:PixelRuler.ViewModels"
    xmlns:wpfui="http://schemas.lepo.co/wpfui/2022/xaml"
    Title="Select Window"
    Width="800"
    Height="450"
    d:DataContext="{d:DesignInstance Type=viewmodels:ScreenshotWindowViewModel}"
    Background="Transparent"
    Cursor="Cross"
    Focusable="True"
    mc:Ignorable="d">

    <Window.Resources>

        <SolidColorBrush
            x:Key="FlashBrush"
            Opacity="0"
            Color="White" />

        <Storyboard x:Key="scaleInOut">
            <DoubleAnimation
                Storyboard.TargetProperty="RenderTransform.ScaleX"
                From="1"
                To="1.2"
                Duration="0:0:.2" />
            <DoubleAnimation
                Storyboard.TargetProperty="RenderTransform.ScaleY"
                From="1"
                To="1.2"
                Duration="0:0:.2" />
            <DoubleAnimation
                BeginTime="0:0:.2"
                Storyboard.TargetProperty="RenderTransform.ScaleX"
                From="1.2"
                To="1"
                Duration="0:0:.2" />
            <DoubleAnimation
                BeginTime="0:0:.2"
                Storyboard.TargetProperty="RenderTransform.ScaleY"
                From="1.2"
                To="1"
                Duration="0:0:.2" />
        </Storyboard>
    </Window.Resources>

    <Window.InputBindings>
        <KeyBinding
            Key="{Binding NewScreenshotFullCommand.Key}"
            Command="{Binding NewScreenshotFullCommand}"
            Modifiers="{Binding NewScreenshotFullCommand.Modifiers}" />
        <KeyBinding
            Key="{Binding BoundsMeasureSelectedCommand.Key}"
            Command="{Binding BoundsMeasureSelectedCommand}"
            Modifiers="{Binding BoundsMeasureSelectedCommand.Modifiers}" />
        <KeyBinding
            Key="{Binding ColorPickerSelectedCommand.Key}"
            Command="{Binding ColorPickerSelectedCommand}"
            Modifiers="{Binding ColorPickerSelectedCommand.Modifiers}" />
        <KeyBinding
            Key="{Binding RulerSelectedCommand.Key}"
            Command="{Binding RulerSelectedCommand}"
            Modifiers="{Binding RulerSelectedCommand.Modifiers}" />
        <KeyBinding
            Key="{Binding ClearAllMeasureElementsCommand.Key}"
            Command="{Binding ClearAllMeasureElementsCommand}"
            Modifiers="{Binding ClearAllMeasureElementsCommand.Modifiers}" />
        <KeyBinding
            Key="{Binding ZoomInCommand.Key}"
            Command="{Binding ZoomInCommand}"
            Modifiers="{Binding ZoomInCommand.Modifiers}" />
        <KeyBinding
            Key="Add"
            Command="{Binding ZoomInCommand}"
            Modifiers="{Binding ZoomInCommand.Modifiers}" />
        <KeyBinding
            Key="{Binding ZoomOutCommand.Key}"
            Command="{Binding ZoomOutCommand}"
            Modifiers="{Binding ZoomOutCommand.Modifiers}" />
        <KeyBinding
            Key="Subtract"
            Command="{Binding ZoomOutCommand}"
            Modifiers="{Binding ZoomOutCommand.Modifiers}" />
        <KeyBinding
            Key="{Binding FitWindowCommand.Key}"
            Command="{Binding FitWindowCommand}"
            Modifiers="{Binding FitWindowCommand.Modifiers}" />
        <KeyBinding
            Key="NumPad0"
            Command="{Binding FitWindowCommand}"
            Modifiers="{Binding FitWindowCommand.Modifiers}" />
        <KeyBinding
            Key="{Binding CloseWindowCommand.Key}"
            Command="{Binding CloseWindowCommand}"
            Modifiers="{Binding CloseWindowCommand.Modifiers}" />


        <KeyBinding
            Key="{Binding PopOutWindowCommand.Key}"
            Command="{Binding PopOutWindowCommand}"
            Modifiers="{Binding PopOutWindowCommand.Modifiers}" />
    </Window.InputBindings>

    <Grid
        x:Name="mainContent"
        HorizontalAlignment="Stretch"
        VerticalAlignment="Stretch">
        <local:MainCanvas x:Name="mainCanvas" Grid.Row="1" />
        <Canvas
            x:Name="overlayCanvas"
            Background="#01FFFFFF"
            IsHitTestVisible="False"
            Visibility="Collapsed">
            <Canvas.RenderTransform>
                <TransformGroup>
                    <ScaleTransform x:Name="reverseDpiTransform" CenterX="0" CenterY="0" ScaleX="1" ScaleY="1" />
                    <SkewTransform />
                    <RotateTransform />
                    <TranslateTransform />
                </TransformGroup>
            </Canvas.RenderTransform>
            <Rectangle
                x:Name="rectSelectionOutline"
                Panel.ZIndex="100"
                SnapsToDevicePixels="True"
                Stroke="Red"
                StrokeThickness="1" />
            <Line
                x:Name="vertIndicator"
                Panel.ZIndex="100"
                SnapsToDevicePixels="True"
                Stroke="Red"
                StrokeDashArray="6 6"
                StrokeThickness="1" />
            <Line
                x:Name="horzIndicator"
                Panel.ZIndex="100"
                SnapsToDevicePixels="True"
                Stroke="Red"
                StrokeDashArray="6 6"
                StrokeThickness="1" />

            <!--  Combined Geomtry - responsible for the dimming around selected window  -->
            <Path
                x:Name="blurBackground"
                Canvas.Left="0"
                Canvas.Top="0"
                Width="{Binding Width, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Canvas}}"
                Height="{Binding Height, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Canvas}}"
                Fill="#80000000"
                Stroke="#80000000"
                StrokeThickness="0">
                <Path.Data>
                    <CombinedGeometry GeometryCombineMode="Exclude">
                        <CombinedGeometry.Geometry1>
                            <RectangleGeometry x:Name="blurRectGeometry" Rect="0,0,250,250" />
                        </CombinedGeometry.Geometry1>
                        <!--  Hole where there is no dark dim  -->
                        <CombinedGeometry.Geometry2>
                            <RectangleGeometry
                                x:Name="innerRectGeometry"
                                RadiusX="4"
                                RadiusY="4"
                                Rect="50,50,25,25" />
                        </CombinedGeometry.Geometry2>
                    </CombinedGeometry>
                </Path.Data>
            </Path>

            <Rectangle
                x:Name="rect"
                Canvas.Left="500"
                Canvas.Top="50"
                Width="0"
                Height="0"
                Fill="{DynamicResource FlashBrush}"
                RadiusX="4"
                RadiusY="4"
                Stroke="Red"
                StrokeDashArray="4 4"
                StrokeThickness="4">
                <Rectangle.RenderTransformOrigin>
                    <Point X=".5" Y=".5" />
                </Rectangle.RenderTransformOrigin>
                <Rectangle.RenderTransform>
                    <ScaleTransform />
                </Rectangle.RenderTransform>
                <Rectangle.Triggers>
                    <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation
                                    RepeatBehavior="Forever"
                                    Storyboard.TargetName="rect"
                                    Storyboard.TargetProperty="StrokeDashOffset"
                                    From="0"
                                    To="8"
                                    Duration="0:0:1" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Rectangle.Triggers>
            </Rectangle>

        </Canvas>
    </Grid>

</Window>
