<Application
    x:Class="PixelRuler.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:PixelRuler"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ui:ThemesDictionary Theme="Light" />
                <local:ThemesDictionary Theme="Light" />
                <ui:ControlsDictionary />
            </ResourceDictionary.MergedDictionaries>

            <!--<FrameworkElement x:Key="EyeDropperCursor" Cursor="Assets/rasterized_segoe_colorpicker_contrast.cur" />-->
            <Cursor x:Key="EyeDropperCursor">Assets/rasterized_segoe_colorpicker_contrast_16.cur</Cursor>

            <local:PercentFormatStringConverter x:Key="PercentFormatStringConverter" />
            <local:ColorFormatStringConverter x:Key="ColorFormatStringConverter" />
            <local:ColorDisplayColorConverter x:Key="ColorDisplayColorConverter" />
            <local:ColorConverter x:Key="ColorConverter" />
            <local:EnumToBoolCheckedStickyConverter x:Key="EnumToBoolCheckedStickyConverter" />
            <local:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
            <local:EnumToOptionConverter x:Key="EnumToOptionConverter" />
            <local:EnumToOptionsCollectionConverter x:Key="EnumToOptionsCollectionConverter" />
            <local:DoubleNaNZeroBlankConverter x:Key="DoubleNaNZeroBlankConverter" />
            <local:DoubleShouldShowPlaceholderConverter x:Key="DoubleShouldShowPlaceholderConverter" />
            <local:DisplayKeysConverter x:Key="DisplayKeysConverter" />
            <local:DisplayKeysMultiConverter x:Key="DisplayKeysMultiConverter" />

            <SolidColorBrush x:Key="BarColor">#F1F3F9</SolidColorBrush>
            <SolidColorBrush x:Key="IsToggledOnColor">#E8EAF0</SolidColorBrush>
            <SolidColorBrush x:Key="IsPressedColor">#EFEFF6</SolidColorBrush>
            <SolidColorBrush x:Key="ToggledHighlightColor">#80B9EE</SolidColorBrush>
            <SolidColorBrush x:Key="AnnotationColor">#EE4B2B</SolidColorBrush>

            <Style TargetType="TextBlock">
                <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}" />
            </Style>


            <Style x:Key="GreyOutIfDisabled" TargetType="TextBlock">
                <Setter Property="Opacity" Value="1" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsEnabled, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" Value="False">
                        <Setter Property="Opacity" Value="0.5" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="ui:TextBlock">
                <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}" />
            </Style>

            <Style x:Key="ToggleButtonSoft" TargetType="ToggleButton">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Grid>

                                <Border CornerRadius="6">
                                    <Border.Style>
                                        <Style TargetType="Border">
                                            <Setter Property="Background" Value="{StaticResource BarColor}" />
                                            <Style.Triggers>


                                                <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=ToggleButton}}" Value="True">
                                                    <Setter Property="Background" Value="{StaticResource IsToggledOnColor}" />
                                                </DataTrigger>

                                                <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType=ToggleButton}}" Value="True">
                                                    <Setter Property="Background" Value="{StaticResource IsToggledOnColor}" />
                                                </DataTrigger>

                                                <DataTrigger Binding="{Binding IsPressed, RelativeSource={RelativeSource AncestorType=ToggleButton}}" Value="True">
                                                    <Setter Property="Background" Value="{StaticResource IsPressedColor}" />
                                                </DataTrigger>

                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>

                                    <Border
                                        Margin="0,0,0,2"
                                        VerticalAlignment="Bottom"
                                        Background="{StaticResource ToggledHighlightColor}">
                                        <Border.Style>
                                            <Style TargetType="Border">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                                <Setter Property="Width" Value="20" />
                                                <Setter Property="Height" Value="4" />
                                                <Setter Property="CornerRadius" Value="2" />
                                                <Setter Property="Opacity" Value="1" />

                                                <Setter Property="LayoutTransform">
                                                    <Setter.Value>
                                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                                    </Setter.Value>
                                                </Setter>

                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=ToggleButton}}" Value="True">
                                                        <Setter Property="Visibility" Value="Collapsed" />
                                                    </DataTrigger>

                                                    <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType=ToggleButton}}" Value="True">
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </DataTrigger>

                                                    <DataTrigger Binding="{Binding IsPressed, RelativeSource={RelativeSource AncestorType=ToggleButton}}" Value="True">
                                                        <Setter Property="LayoutTransform">
                                                            <Setter.Value>
                                                                <ScaleTransform ScaleX="1" ScaleY="1" />
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="Opacity" Value=".8" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                    </Border>
                                </Border>

                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="{x:Type local:DropDownButtonCustom}" />

        </ResourceDictionary>
    </Application.Resources>
    <JumpList.JumpList>
        <JumpList>
            <JumpTask Title="New Fullscreen Screenshot" />
            <JumpTask Title="New Windowed Screenshot" />
        </JumpList>
    </JumpList.JumpList>
</Application>
